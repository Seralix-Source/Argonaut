from typing import NoReturn, Literal, Never, Self, Any, overload, final

from rich.text import Text


@final
class nulltype:
    def __new__(cls) -> Self: ...
    @overload
    def nullify(self, object: Any) -> Any | None: ...
    @overload
    def nullify[_T](self, object: Any, default: _T, /) -> Any | _T: ...
    def __bool__(self) -> Literal[False]: ...
    def __rich__(self) -> Text: ...
    def __repr__(self) -> str: ...
    def __init_subclass__(cls, **options: Never) -> NoReturn: ...


null: nulltype
